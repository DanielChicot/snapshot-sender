version: '3'

services:
  hbase:
    image: harisekhon/hbase:1.4
    ports:
      - 9090:9090
      - 9095:9095
      - 2181:2181
      - 16201:16201
    container_name: hbase

  aws:
    image: localstack/localstack:latest
    ports:
      - '4563-4584:4563-4584'
      - '8055:8080'
    container_name: aws
    environment:
      - SERVICES=s3,dynamodb

  aws-init:
    image: aws-init
    build:
      context: resources/aws-init
    container_name: aws-init
    depends_on:
      - aws
    environment:
      - AWS_DEFAULT_REGION=
      - S3_BUCKET=demobucket

  hbase-populate:
    image: hbase-populate
    build:
      context: resources
      dockerfile: Dockerfile_populate_hbase
    container_name: hbase-populate
    depends_on:
      - hbase
      - dks-standalone-http
    volumes:
      - shared-volume:/opt/snapshot-sender/data
    command: >-
      --data-key-service http://dks-standalone-http:8080/datakey
      --zookeeper-quorum hbase
      --completed-flag /opt/snapshot-sender/data/ready
      --remove-output-file data/ucdata-file-output.txt
      --test-configuration-file test-config.json

  hbase-to-mongo-export:
    image: hbase-to-mongo-export
    build:
      context: resources
      dockerfile: Dockerfile_htme
    container_name: hbase-to-mongo-export
    depends_on:
      - hbase
      - dks-standalone-https
      - aws
    volumes:
      - shared-volume:/opt/snapshot-sender/data
    command: >-
      --topic.name=db.core.addressDeclaration

  hbase-to-mongo-export-claimant-event:
    image: hbase-to-mongo-export
    build:
      context: resources
      dockerfile: Dockerfile_htme
    container_name: hbase-to-mongo-export-claimant-event
    depends_on:
      - hbase
      - dks-standalone-https
      - aws
    volumes:
      - shared-volume:/opt/snapshot-sender/data
    command: >-
      --topic.name=db.quartz.claimantEvent

  snapshot-sender:
    image: snapshot-sender
    build:
      context: .
    container_name: snapshot-sender
    depends_on:
      - dks-standalone-https
      - mock-nifi
    environment:
      - CORRELATION_ID=123
      - TOPIC_NAME=db.core.toDo

  snapshot-sender-no-exports:
    image: snapshot-sender
    build:
      context: .
    container_name: snapshot-sender-no-exports
    depends_on:
      - mock-nifi
    environment:
      - CORRELATION_ID=321
      - TOPIC_NAME=db.database.empty
      - ADDITIONAL_SPRING_ACTIVE_PROFILES=noOpReader

  dks-standalone-http:
    image: dks-standalone-http
    ports:
      - 8090:8080
      - 8100:8443
    build:
      context: resources
      dockerfile: Dockerfile_dks
    container_name: dks-standalone-http
    command:
      --spring.main.banner-mode=off
      --logging.level.root=INFO
      --s3.service.endpoint=http://aws:4566
      --server.environment_name=local
    environment:
      - SPRING_PROFILES_ACTIVE=STANDALONE,INSECURE,LocalAWS

  dks-standalone-https:
    image: dks-standalone-https
    ports:
      - 8091:8443
      - 8101:8080
    build:
      context: resources
      dockerfile: Dockerfile_dks
    container_name: dks-standalone-https
    command:
      --spring.main.banner-mode=off
      --logging.level.root=INFO
      --s3.service.endpoint=http://aws:4566
      --server.environment_name=local
    environment:
      - SPRING_PROFILES_ACTIVE=STANDALONE,SECURE,LocalAWS
      - SPRING_CONFIG_LOCATION=application-dks-secure.properties

  mock-nifi:
    image: mock-nifi
    build:
      context: resources
      dockerfile: Dockerfile_mock_nifi
    ports:
      - "5443:5443"
    volumes:
      - shared-volume:/data/output
    container_name: mock-nifi
    environment:
      KEYSTORE_PASSWORD: changeit
      TRUSTSTORE_PASSWORD: changeit
      TLS_KEY_PASSWORD: changeit
      TLS_KEY_ID: cid
      TLS_CERT_ID: self
      TLS_CACERT_ID: mock-nifi

  sender-integration-test:
    image: sender-integration-test:latest
    build:
      context: .
      dockerfile: resources/Dockerfile_sender_integration
    container_name: sender-integration-test
    volumes:
      - shared-volume:/data/output
    depends_on:
      - mock-nifi
    command: "gradle --rerun-tasks integration"

volumes:
  shared-volume:
